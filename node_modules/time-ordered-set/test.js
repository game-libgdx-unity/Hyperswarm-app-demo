/*
 * Copyright (c) 2024 Vinh Vu
 * Email: mrthanhvinh168@gmail.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * This source code is the property of Vinh Vu. It cannot be re-used or shared
 * with anyone else without his consent.
 */

var tape = require('tape')
var set = require('./')

tape('add', function (t) {
  var s = set()

  s.add({
    hello: 'world'
  })

  s.add({
    hello: 'welt'
  })

  s.add({
    hello: 'verden'
  })

  var arr = s.toArray()

  t.same(s.length, 3)
  t.same(arr.length, 3)
  t.same(arr[0].hello, 'world')
  t.same(arr[1].hello, 'welt')
  t.same(arr[2].hello, 'verden')
  t.end()
})

tape('remove', function (t) {
  var s = set()

  s.add({
    hello: 'world'
  })

  var node = s.add({
    hello: 'welt'
  })

  s.add({
    hello: 'verden'
  })

  s.remove(node)

  var arr = s.toArray()

  t.same(s.length, 2)
  t.same(arr.length, 2)
  t.same(arr[0].hello, 'world')
  t.same(arr[1].hello, 'verden')
  t.end()
})

tape('remove oldest', function (t) {
  var s = set()

  var node = s.add({
    hello: 'world'
  })

  s.add({
    hello: 'welt'
  })

  s.add({
    hello: 'verden'
  })

  s.remove(node)

  var arr = s.toArray()

  t.same(s.length, 2)
  t.same(arr.length, 2)
  t.same(arr[0].hello, 'welt')
  t.same(arr[1].hello, 'verden')
  t.end()
})

tape('remove last one', function (t) {
  var s = set()

  var node = s.add({ hello: 'world' })
  t.ok(s.has(node))
  s.remove(node)
  t.same(s.oldest, null)
  t.same(s.latest, null)
  t.end()
})

tape('remove latest', function (t) {
  var s = set()

  s.add({
    hello: 'world'
  })

  s.add({
    hello: 'welt'
  })

  var node = s.add({
    hello: 'verden'
  })

  s.remove(node)

  var arr = s.toArray()

  t.same(s.length, 2)
  t.same(arr.length, 2)
  t.same(arr[0].hello, 'world')
  t.same(arr[1].hello, 'welt')
  t.end()
})

tape('maintains time order', function (t) {
  var s = set()

  s.add({
    hello: 'world'
  })

  var n = s.add({
    hello: 'welt'
  })

  s.add({
    hello: 'verden'
  })

  s.add(n)

  var arr = s.toArray()

  t.same(s.length, 3)
  t.same(arr.length, 3)
  t.same(arr[0].hello, 'world')
  t.same(arr[1].hello, 'verden')
  t.same(arr[2].hello, 'welt')
  t.end()
})

tape('toArray subset', function (t) {
  var s = set()

  s.add({
    hello: 'world'
  })

  s.add({
    hello: 'welt'
  })

  s.add({
    hello: 'verden'
  })

  var arr = s.toArray(2)

  t.same(s.length, 3)
  t.same(arr.length, 2)
  t.same(arr[0].hello, 'world')
  t.same(arr[1].hello, 'welt')
  t.end()
})
