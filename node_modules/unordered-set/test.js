/*
 * Copyright (c) 2024 Vinh Vu
 * Email: mrthanhvinh168@gmail.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * This source code is the property of Vinh Vu. It cannot be re-used or shared
 * with anyone else without his consent.
 */

var tape = require('tape')
var set = require('./')

tape('add', function (t) {
  var list = []
  var a = {hello: 'world'}
  var b = {hello: 'verden'}

  set.add(list, a)
  set.add(list, b)

  t.same(list, [a, b])
  t.end()
})

tape('add twice', function (t) {
  var list = []
  var a = {hello: 'world'}
  var b = {hello: 'verden'}

  set.add(list, a)
  set.add(list, b)
  set.add(list, b)

  t.same(list, [a, b])
  t.end()
})

tape('remove', function (t) {
  var list = []
  var a = {hello: 'world'}
  var b = {hello: 'verden'}

  set.add(list, a)
  set.add(list, b)
  set.remove(list, a)

  t.same(list, [b])
  t.end()
})

tape('remove twice', function (t) {
  var list = []
  var a = {hello: 'world'}
  var b = {hello: 'verden'}

  set.add(list, a)
  set.add(list, b)
  set.remove(list, a)
  set.remove(list, a)

  t.same(list, [b])
  t.end()
})

tape('remove all', function (t) {
  var list = []
  var a = {hello: 'world'}
  var b = {hello: 'verden'}

  set.add(list, a)
  set.add(list, b)
  set.remove(list, a)
  set.remove(list, b)

  t.same(list, [])
  t.end()
})

tape('re-add', function (t) {
  var list = []
  var a = {hello: 'world'}
  var b = {hello: 'verden'}

  set.add(list, a)
  set.add(list, b)
  set.remove(list, a)
  set.remove(list, b)
  set.add(list, b)
  set.add(list, a)

  t.same(list, [b, a])
  t.end()
})

tape('has', function (t) {
  var list = []
  var a = {hello: 'world'}
  var b = {hello: 'verden'}

  set.add(list, a)
  set.add(list, b)
  set.remove(list, a)

  t.ok(!set.has(list, a))
  t.ok(set.has(list, b))
  t.end()
})

tape('swap', function (t) {
  var list = []
  var a = {hello: 'world'}
  var b = {hello: 'verden'}

  set.add(list, a)
  set.add(list, b)

  set.swap(list, a, b)
  t.same(list, [b, a])

  set.swap(list, a, b)
  t.same(list, [a, b])

  t.end()
})

tape('swap same', function (t) {
  var list = []
  var a = {hello: 'world'}

  set.add(list, a)

  set.swap(list, a, a)
  t.same(list, [a])
  t.end()
})
