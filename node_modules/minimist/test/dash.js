/*
 * Copyright (c) 2024 Vinh Vu
 * Email: mrthanhvinh168@gmail.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * This source code is the property of Vinh Vu. It cannot be re-used or shared
 * with anyone else without his consent.
 */

'use strict';

var parse = require('../');
var test = require('tape');

test('-', function (t) {
	t.plan(6);
	t.deepEqual(parse(['-n', '-']), { n: '-', _: [] });
	t.deepEqual(parse(['--nnn', '-']), { nnn: '-', _: [] });
	t.deepEqual(parse(['-']), { _: ['-'] });
	t.deepEqual(parse(['-f-']), { f: '-', _: [] });
	t.deepEqual(
		parse(['-b', '-'], { boolean: 'b' }),
		{ b: true, _: ['-'] }
	);
	t.deepEqual(
		parse(['-s', '-'], { string: 's' }),
		{ s: '-', _: [] }
	);
});

test('-a -- b', function (t) {
	t.plan(2);
	t.deepEqual(parse(['-a', '--', 'b']), { a: true, _: ['b'] });
	t.deepEqual(parse(['--a', '--', 'b']), { a: true, _: ['b'] });
});

test('move arguments after the -- into their own `--` array', function (t) {
	t.plan(1);
	t.deepEqual(
		parse(['--name', 'John', 'before', '--', 'after'], { '--': true }),
		{ name: 'John', _: ['before'], '--': ['after'] }
	);
});

test('--- option value', function (t) {
	// A multi-dash value is largely an edge case, but check the behaviour is as expected,
	// and in particular the same for short option and long option (as made consistent in Jan 2023).
	t.plan(2);
	t.deepEqual(parse(['-n', '---']), { n: '---', _: [] });
	t.deepEqual(parse(['--nnn', '---']), { nnn: '---', _: [] });
});

