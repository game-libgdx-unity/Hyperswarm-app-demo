/*
 * Copyright (c) 2024 Vinh Vu
 * Email: mrthanhvinh168@gmail.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * This source code is the property of Vinh Vu. It cannot be re-used or shared
 * with anyone else without his consent.
 */

var exec = require('child_process').execSync
var path = require('path')

var symbols = exec(`nm -gU "${path.join(require.resolve('sodium-native'), '../prebuilds/darwin-x64/libsodium.dylib')}"`).toString().trim().split('\n')
var native = new Set(Object.keys(require('sodium-native')).sort())
var js = new Set(Object.keys(require('sodium-javascript')).sort())

symbols = symbols.map(l => l.split(' ').pop().replace(/^_/, '').replace(/_[^_]*bytes.*/, (s) => s.toUpperCase()))

var missing = []

console.log(`
<!-- Generated by build-scripts/symbols.js with
     sodium-native@${require('sodium-native/package.json').version}
     sodium-javascript@${require('sodium-javascript/package.json').version} -->\
`)

const max = symbols.filter(s => native.has(s) || js.has(s)).map(s => s.length).reduce((a, b) => Math.max(a, b))
const lines = ':-' + ''.padEnd(max, '--') + '-:'
const center = s => s.padStart(Math.floor((max + s.length) / 2), ' ').padEnd(max, ' ')

console.log(`|  ${center('C Library Symbol')}  |   \`sodium-native\`    | \`sodium-javascript\`  |`)
console.log(`|${lines}|:--------------------:|:--------------------:|`)

for (var i = 0; i < symbols.length; i++) {
  var s = symbols[i]
  if (!(native.has(s) || js.has(s))) missing.push(s)
  else console.log(`| \`${(s + '`').padEnd(max + 1, ' ')} | ${native.has(s) ? ' :white_check_mark: ' : ':small_red_triangle:'} | ${js.has(s) ? ' :white_check_mark: ' : ':small_red_triangle:'} |`)
}

console.log('\n### Missing altogether (Ctrl + F friendly)\n')
console.log(missing.map(s => '`' + s + '`').join(', '))
